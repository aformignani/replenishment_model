
namespace miscusi_wolf_services.Controllers.Wolf.Supply
{
    [Route("wolfbe/api/[controller]")]
    [ApiController]
    public class SupplyController : Controller
    {
        [Route("reorder_model_view")]
        [HttpGet]
        [HttpPost]
        public ActionResult Reorder_model_view(int week)
        {

            string condition = week > 0 ? $"case when reorder_model_view.week_released = {week} then 1 else 0 end" : "1";

            using var db = DataConnectionRepository.MiscusiDWHDB.GetDataTablesDB();

            var response = new Editor(db, "reorder_model_view", new[] { "store_name", "code", "week_released" })
           .Model<Reorder_model_viewModel>("reorder_model_view")

           .Field(new Field("reorder_view.ct_suggested"))
           .LeftJoin("reorder_model_view_output as reorder_view", "reorder_view.store_name", "=", "reorder_model_view.store_name and reorder_view.code = reorder_model_view.code and reorder_model_view.week_released = reorder_view.week_released")
           .Debug(true)
           .Where(condition, 1)
           .Process(Request)
           .Data();

            return Json(response);
        }

        [Route("rm_forecasted_sales")]
        [HttpGet]
        [HttpPost]
        public ActionResult Rm_forecasted_sales(int week)
        {
            string condition = week > 0 ? $"case when week_released = {week} then 1 else 0 end" : "1";

            using var db = DataConnectionRepository.MiscusiDWHDB.GetDataTablesDB();

            var response = new Editor(db, "miscusi_dwh.rm_forecasted_sales", new[] { "store_name", "time_period", "week_released" })
                .Model<Rm_forecasted_salesModel>()
                .Where(condition, 1)
                .Debug(true)
                .Process(Request)
                .Data();

            return Json(response);
        }


    }
}
